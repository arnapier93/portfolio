{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arnap\\\\portfolio\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Navbar.css\";\nimport { ReactComponent as LinkedInIcon } from '../assets/linkedin.svg';\nimport { ReactComponent as UpworkIcon } from '../assets/upwork.svg';\nimport { ReactComponent as EmailIcon } from '../assets/email.svg';\nimport { ReactComponent as GitHubIcon } from '../assets/github.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [scrollPos, setScrollPos] = useState(false);\n  const [isHidden, hideNavbar] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScroll = window.scrollY;\n      setScrollPos(currentScroll);\n      if (currentScroll > 93) {\n        hideNavbar(true);\n      } else {\n        hideNavbar(false);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: isHidden ? \"110px\" : \"0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `navbar ${isHidden ? \"navbar-hidden\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumplinks\",\n        children: [\"About Me\", \"Projects\", \"Testimonials\", \"Get in Touch\"].map((item, index, href_id) => /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navbar-text\",\n          href: \"#\" + str.replace(/\\s+/g, \"\"),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-icons\",\n        children: [/*#__PURE__*/_jsxDEV(LinkedInIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UpworkIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmailIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GitHubIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Navbar, \"yVjP3YWOjNfsBCpcTZfIAA6OUjA=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","ReactComponent","LinkedInIcon","UpworkIcon","EmailIcon","GitHubIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","scrollPos","setScrollPos","isHidden","hideNavbar","handleScroll","currentScroll","window","scrollY","addEventListener","removeEventListener","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","index","href_id","href","str","replace","_c","$RefreshReg$"],"sources":["C:/Users/arnap/portfolio/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { ReactComponent as LinkedInIcon } from '../assets/linkedin.svg';\r\nimport { ReactComponent as UpworkIcon } from '../assets/upwork.svg';\r\nimport { ReactComponent as EmailIcon } from '../assets/email.svg';\r\nimport { ReactComponent as GitHubIcon } from '../assets/github.svg';\r\n\r\nconst Navbar = () => {\r\n  const [scrollPos, setScrollPos] = useState(false);\r\n  const [isHidden, hideNavbar] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScroll = window.scrollY;\r\n      setScrollPos(currentScroll);\r\n\r\n      if (currentScroll > 93) {\r\n        hideNavbar(true);\r\n      } else {\r\n        hideNavbar(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div style={{height: isHidden ? \"110px\" : \"0px\"}}/>\r\n      <div className={`navbar ${isHidden ? \"navbar-hidden\" : \"\"}`}>\r\n        <div className=\"jumplinks\">\r\n          {[\"About Me\", \"Projects\", \"Testimonials\", \"Get in Touch\"].map(\r\n            (item, index, href_id) => (\r\n              <a key={index} \r\n              className=\"navbar-text\"\r\n              href={\"#\" + str.replace(/\\s+/g, \"\")}\r\n              >{item}</a>\r\n            )\r\n          )}\r\n        </div>\r\n      <div className=\"contact-icons\">\r\n          <LinkedInIcon className=\"icon\" />\r\n          <UpworkIcon className=\"icon\" />\r\n          <EmailIcon className=\"icon\" />\r\n          <GitHubIcon className=\"icon\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}