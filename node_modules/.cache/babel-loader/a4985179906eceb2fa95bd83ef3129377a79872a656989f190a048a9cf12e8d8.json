{"ast":null,"code":"var _jsxFileName = \"C:\\\\portfolio\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState } from \"react\";\nimport \"./Projects.css\";\nimport ProjectCard from \"./ProjectCard.js\";\nimport tileGameScreenshot from \"../assets/tile-game-screenshot.png\";\nimport toastTesterScreenshot from \"../assets/toast-tester-screenshot.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectList = [{\n  title: \"N-Puzzle\",\n  description: `The N-Puzzle is a fun take on an old classic, the 8-puzzle.\n      It was loosely inspired by a Princeton University Computer Science class.\n      You can choose your board size anywhere from a 3-puzzle to a 99-puzzle! \n      You can undo, restart, or shuffle for a new solvable board.`,\n  tags: [\"JavaScript REACT\", \"HTML\", \"CSS\"],\n  screenshot: tileGameScreenshot,\n  type: \"iframe\",\n  src: process.env.PUBLIC_URL + \"/projects/tile-game/index.html\"\n}, {\n  title: \"Toast Tester\",\n  description: `Taste the toast! A toast simulator that is almost as \n      exciting as making real toast! Realistic gradient toasting, functional\n      smoke alarm, and relaxing background music are just SOME of the features \n      you can expect. Toast so good you can almost taste it, Toast Tester! (TM) --\n      This was a group project for a Computer Graphics class I took at UMass \n      Dartmouth, despite it's tongue-in-cheek style it earned a perfect score \n      and high reviews from the Professor who had us present the project to a \n      touring group of local high schoolers`,\n  tags: [\"JavaScript\", \"Three.js\"],\n  screenshhot: toastTesterScreenshot,\n  type: \"iframe\",\n  src: \"/projects/Toast-Tester/index.html\"\n}];\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: \"Games, apps and more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: projectList.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","ProjectCard","tileGameScreenshot","toastTesterScreenshot","jsxDEV","_jsxDEV","projectList","title","description","tags","screenshot","type","src","process","env","PUBLIC_URL","screenshhot","Projects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","_c","$RefreshReg$"],"sources":["C:/portfolio/src/components/Projects.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./Projects.css\"\r\nimport ProjectCard from \"./ProjectCard.js\"\r\n\r\nimport tileGameScreenshot from \"../assets/tile-game-screenshot.png\";\r\nimport toastTesterScreenshot from \"../assets/toast-tester-screenshot.png\"\r\n\r\nconst projectList = [\r\n  {\r\n    title: \"N-Puzzle\",\r\n    description: `The N-Puzzle is a fun take on an old classic, the 8-puzzle.\r\n      It was loosely inspired by a Princeton University Computer Science class.\r\n      You can choose your board size anywhere from a 3-puzzle to a 99-puzzle! \r\n      You can undo, restart, or shuffle for a new solvable board.`,\r\n    tags: [\"JavaScript REACT\", \"HTML\", \"CSS\"],\r\n    screenshot: tileGameScreenshot,\r\n    type: \"iframe\",\r\n    src: process.env.PUBLIC_URL +  \"/projects/tile-game/index.html\",\r\n  },\r\n  { \r\n    title: \"Toast Tester\", \r\n    description: `Taste the toast! A toast simulator that is almost as \r\n      exciting as making real toast! Realistic gradient toasting, functional\r\n      smoke alarm, and relaxing background music are just SOME of the features \r\n      you can expect. Toast so good you can almost taste it, Toast Tester! (TM) --\r\n      This was a group project for a Computer Graphics class I took at UMass \r\n      Dartmouth, despite it's tongue-in-cheek style it earned a perfect score \r\n      and high reviews from the Professor who had us present the project to a \r\n      touring group of local high schoolers`,\r\n    tags: [\"JavaScript\", \"Three.js\"],\r\n    screenshhot: toastTesterScreenshot, \r\n    type: \"iframe\", \r\n    src: \"/projects/Toast-Tester/index.html\" \r\n  \r\n  }\r\n\r\n];\r\n\r\nconst Projects = () => {\r\n  \r\n  return (\r\n    <div className=\"projects\">\r\n        <div className=\"title-box\">\r\n            <h1 className=\"title\">Projects</h1>\r\n            <p className=\"text\">Games, apps and more</p>\r\n        </div>\r\n        <div className=\"project-list\">\r\n          {projectList.map((project, index) => (\r\n            <ProjectCard\r\n              key={index}\r\n              project={project}\r\n            />\r\n          ))}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,qBAAqB,MAAM,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,WAAW,GAAG,CAClB;EACEC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE;AACjB;AACA;AACA,kEAAkE;EAC9DC,IAAI,EAAE,CAAC,kBAAkB,EAAE,MAAM,EAAE,KAAK,CAAC;EACzCC,UAAU,EAAER,kBAAkB;EAC9BS,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI;AACjC,CAAC,EACD;EACER,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;EACxCC,IAAI,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;EAChCO,WAAW,EAAEb,qBAAqB;EAClCQ,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAE;AAEP,CAAC,CAEF;AAED,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAErB,oBACEZ,OAAA;IAAKa,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBd,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBd,OAAA;QAAIa,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnClB,OAAA;QAAGa,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1Bb,WAAW,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BrB,OAAA,CAACJ,WAAW;QAEVwB,OAAO,EAAEA;MAAQ,GADZC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAI,EAAA,GAlBKV,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}